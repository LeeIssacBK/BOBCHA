package com.hungry.spring.review.controller;

import java.io.File;
import java.io.PrintWriter;
import java.util.Calendar;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.hungry.spring.review.service.ReviewService;
import com.hungry.spring.review.vo.ReviewVO;
import com.oreilly.servlet.MultipartRequest;

@Controller
@RequestMapping("/review")
public class ReviewController {
	
	@Autowired
	private ReviewService reviewService;
	
	//리뷰 등록하기
	@RequestMapping("/review_ok")
	public String review_ok(ReviewVO vo, HttpServletRequest request) throws Exception{
		String saveFolder = request.getRealPath("./resources/upload");
		System.out.println(saveFolder);

		int fileSize = 10*1024*1024; //파일업로드 최대 크기
		MultipartRequest multi = null; //cos.jar로 받을 변수
		
		multi = new MultipartRequest(request, saveFolder,fileSize, "utf-8");
		
		vo.setRv_title(multi.getParameter("rv_title"));//가게명
		vo.setRv_writer(multi.getParameter("rv_writer"));//작성자
		vo.setRv_content(multi.getParameter("rv_content"));//리뷰내용
		vo.setRv_price(multi.getParameter("rv_price"));//가격정보
		String s = "";
		for(String str : multi.getParameterValues("rv_days")) {
			s += str;
		}
		vo.setRv_days(s);//출몰일자
		vo.setRv_times(multi.getParameter("rv_times"));//출몰시간
		vo.setRv_rating(Integer.parseInt(multi.getParameter("rv_rating")));//평점
		vo.setRv_lat(multi.getParameter("rv_lat"));//위도
		vo.setRv_lng(multi.getParameter("rv_lng"));//경도
		
		File upFile = multi.getFile("rv_image_file");
		
		if(upFile!=null) {
			String fileName = upFile.getName();
			Calendar c = Calendar.getInstance();
			int year = c.get(Calendar.YEAR);
			int month = c.get(Calendar.MONTH)+1;
			int date = c.get(Calendar.DATE);
			
			String homedir = saveFolder+"/"+year+"-"+month+"-"+date;
			File path1 = new File(homedir);
			
			if(!(path1.exists())) {
				path1.mkdir();
			}
			Random r = new Random();
			int random = r.nextInt(10000000);
			int index = fileName.lastIndexOf(".");
			String fileExtendsion = fileName.substring(index+1);
			String refileName = "review_img"+year+month+date+random+"."+fileExtendsion;
			String fileDBName = "/"+year+"-"+month+"-"+date+"/"+refileName;
			upFile.renameTo(new File(homedir+"/"+refileName));
			vo.setRv_image_file(fileDBName);
		}else {
			String fileDBName = "";
			vo.setRv_image_file(fileDBName);
		}
		this.reviewService.insertReview(vo);
		return "redirect:/";
	}
	
	//리뷰 삭제하기
	@RequestMapping("/review_del")
	public String review_del(int rv_no, HttpSession session, HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		String m_id = (String) session.getAttribute("m_id");
		if(m_id == null) {
			out.println("<script>");
			out.println("alert('세션이 만료되었습니다. 다시 로그인 해주세요');");
			out.println("location.reload();");
			out.println("</script>");
		}else {
			this.reviewService.deleteReview(rv_no);
		}
		return "redirect:/";
	}
	
	
	//리뷰 수정하기
	@RequestMapping("/review_edit")
	public String review_edit(ReviewVO vo, HttpServletRequest request) throws Exception{
		String saveFolder = request.getRealPath("./resources/upload");
		System.out.println(saveFolder);
		int fileSize = 10*1024*1024; //파일업로드 최대 크기
		MultipartRequest multi = null; //cos.jar로 받을 변수
		multi = new MultipartRequest(request, saveFolder,fileSize, "utf-8");
		int rv_no = Integer.parseInt(multi.getParameter("rv_no"));//고유번호
		File upFile = multi.getFile("rv_image_file");
		ReviewVO rvo = this.reviewService.getReview(rv_no);
		if(upFile!=null) {
			String fileName = upFile.getName();
			File delFile = new File(saveFolder+rvo.getRv_image_file());
			if(delFile.exists()) {
				delFile.delete();
			}
			Calendar c = Calendar.getInstance();
			int year = c.get(Calendar.YEAR);
			int month = c.get(Calendar.MONTH)+1;
			int date = c.get(Calendar.DATE);
			String homedir = saveFolder+"/"+year+"-"+month+"-"+date;
			File path1 = new File(homedir);
			if(!(path1.exists())) {
				path1.mkdir();
			}
			Random r = new Random();
			int random = r.nextInt(10000000);
			int index = fileName.lastIndexOf(".");
			String fileExtendsion = fileName.substring(index+1);
			String refileName = "review_img"+year+month+date+random+"."+fileExtendsion;
			String fileDBName = "/"+year+"-"+month+"-"+date+"/"+refileName;
			upFile.renameTo(new File(homedir+"/"+refileName));
			vo.setRv_image_file(fileDBName);
		}else {
			String fileDBName = "";
			if(rvo.getRv_image_file() != null) {				
				vo.setRv_image_file(rvo.getRv_image_file());
			}else {
				vo.setRv_image_file(fileDBName);
			}
		}
		vo.setRv_no(rv_no);
		vo.setRv_title(multi.getParameter("rv_title"));//가게명
		vo.setRv_writer(multi.getParameter("rv_writer"));//작성자
		vo.setRv_content(multi.getParameter("rv_content"));//리뷰내용
		vo.setRv_price(multi.getParameter("rv_price"));//가격정보
		String s = "";
		for(String str : multi.getParameterValues("rv_days")) {
			s += str;
		}
		vo.setRv_days(s);//출몰일자
		vo.setRv_times(multi.getParameter("rv_times"));//출몰시간
		this.reviewService.editReview(vo);
		
		return "redirect:/";
	}

	
}
